# Задача 22: через мн-во
# Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
# Выдать без повторений в порядке возрастания все числа, которые встречаются в обоих наборах.

# Пользователь вводит 2 числа. 
# n - кол-во элементов первого множества. 
# m - кол-во элементов второго множества. 
# Затем пользователь вводит сами элементы множеств.
# 11 6
# 2 4 6 8 10 12 10 8 6 4 2
# 3 6 9 12 15 18

# 6 12

# n = int(input("Введите кол-во эл-тов первого мн-ва: "))
# m = int(input("Введите кол-во эл-тов второго мн-ва: "))
# int(input("Введите сами элементы первого мн-ва, нажимая enter после каждого: "))
# int(input("Введите сами элементы второго мн-ва, нажимая enter после каждого: "))
# ф-я: <без повторений в порядке возрастания все числа, которые встречаются в обоих наборах>


# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растет на круглой грядке, причем 
# кусты высажены только по окружности. Таким образом, 
# у каждого куста есть ровно два соседних. 
# Всего на грядке растет N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод – 
# на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники.
# Эта система состоит из управляющего модуля и нескольких собирающих модулей.
# Собирающий модуль за один заход, находясь непосредственно перед некоторым
# кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может
# собрать за один заход собирающий модуль, находясь перед некоторым кустом
# заданной во входном файле грядки.

# 4 -> 1 2 3 4
# 9

# n = int(input())
# array = [int(i) for i in input().split()][:n]
# max_summa = 0
# for i in range(1, len(array) - 1):
#    if max_summa < array[i - 1] + array[i] + array[i + 1]:
#       max_summa = array[i - 1] + array[i] + array[i + 1]

# if max_summa < array[0] + array[1] + array[len(array) - 1]:
#    max_summa = array[0] + array[1] + array[len(array) - 1]
# if max_summa < array[0] + array[len(array) - 1] + array[len(array) - 2]:
#    max_summa = array[0] + array[len(array) - 1] + array[len(array) - 2]
# print(max_summa)

def square_sum(n):
    for item in range(1, 1+n) :
        sum = 0
        square_num = item * item
        sum += square_num
        print(sum)